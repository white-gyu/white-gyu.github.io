{"componentChunkName":"component---src-templates-blog-post-js","path":"/Spring/@bean-vs-@component/","result":{"data":{"site":{"siteMetadata":{"title":"white-gyu Logs","author":"white-gyu","siteUrl":"https://white-gyu.github.io","sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"dd768bd0-0254-516c-82bf-4e80777b6b5b","excerpt":"스프링에서 객체를 다루기 위해서는 객체가 Bean으로 등록이 돼야한다. 그 중에서 설정 관련 객체들은 @Bean,\n@Configuration으로 스프링 컨테이너에 Bean으로 등록한다.\n그럼 @Bean과 @Component의 차이는 뭘까? @Bean @Bean은 메서드 레벨에서 선언하며, 반환되는 객체를 개발자가 수동으로 등록하는 어노테이션이다. 개발자가 컨트롤이 불가능한 외부 라이브러리를 Bean으로 등록하고 싶은 경우에 사용된다. @Component @Component…","html":"<p>스프링에서 객체를 다루기 위해서는 객체가 Bean으로 등록이 돼야한다. 그 중에서 설정 관련 객체들은 <span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Bean</span>,\n<span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Configuration</span>으로 스프링 컨테이너에 Bean으로 등록한다.\n그럼 <span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Bean</span>과 <span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Component</span>의 차이는 뭘까?</p>\n<h2 id=\"bean\" style=\"position:relative;\"><a href=\"#bean\" aria-label=\"bean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Bean</h2>\n<p><span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Bean</span>은 <strong>메서드 레벨</strong>에서 선언하며, 반환되는 객체를 개발자가 <strong>수동으로 등록</strong>하는 어노테이션이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfig</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token annotation punctuation\">@Bean</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>개발자가 <strong>컨트롤이 불가능한 외부 라이브러리</strong>를 Bean으로 등록하고 싶은 경우에 사용된다.</p>\n<h2 id=\"component\" style=\"position:relative;\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Component</h2>\n<p><span style=\"background: rgb(0 30 181 / 15%); font-weight: bold\">@Component</span>는 <strong>클래스 레벨</strong>에서 선엄함으로써 <strong>스프링이 런타임에서 컴포넌트 스캔을 통해 자동으로 빈을 찾아 등록</strong>하는 어노테이션이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Utility</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>반대로, 개발자가 <strong>직접 컨드롤이 가능한 클래스</strong>의 경우에 사용된다.</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">@Bean</th>\n<th align=\"left\">@Component</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">메소드 사용</td>\n<td align=\"left\">클래스 사용</td>\n</tr>\n<tr>\n<td align=\"left\">컨트롤이 불가능한 외부 라이브러리 사용하는 경우</td>\n<td align=\"left\">개발자가 컨트롤 가능한 클래스 사용하는 경우</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 자료</h2>\n<p><a href=\"https://youngjinmo.github.io/2021/06/bean-component/\">Bean과 Component 차이</a></p>","frontmatter":{"title":"@Bean vs @Component","date":"February 23, 2022"}}},"pageContext":{"slug":"/Spring/@bean-vs-@component/","previous":{"fields":{"slug":"/Spring/인터페이스를-왜-사용해야-할까/"},"frontmatter":{"title":"인터페이스를 왜 사용해야 할까"}},"next":{"fields":{"slug":"/Mysql/db-정규화란/"},"frontmatter":{"title":"DB 정규화란"}}}},"staticQueryHashes":["2486386679","3128451518"]}