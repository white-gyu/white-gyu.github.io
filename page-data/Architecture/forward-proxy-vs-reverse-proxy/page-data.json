{"componentChunkName":"component---src-templates-blog-post-js","path":"/Architecture/forward-proxy-vs-reverse-proxy/","result":{"data":{"site":{"siteMetadata":{"title":"white-gyu Logs","author":"white-gyu","siteUrl":"https://white-gyu.github.io","sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f6fc0832-4028-5187-900e-aeece413c1c5","excerpt":"사용자가 www.google.com에 연결하려고 하면 사용자 pc가 직접 연결하는 게 아니라 Forward Proxy Server가 요청을 받아\nwww.google.com에 연결하여 그 결과를 클라이언트에게 forward 해줍니다. forward 프록시는 캐싱 기능이 있어 자주 사용되는 컨텐츠라면 월등한 성능 향상을 가져올 수 있으며 \n정해진 사이트만 연결하게 설정하는 등 웹 사용 환경을 제한할 수 있어 보안이 매우 중요한 기업 환경 등에서 많이 사용합니다. image2021-6-2_8-52-5…","html":"<p>사용자가 www.google.com에 연결하려고 하면 사용자 pc가 직접 연결하는 게 아니라 Forward Proxy Server가 요청을 받아\nwww.google.com에 연결하여 그 결과를 클라이언트에게 forward 해줍니다.</p>\n<p>forward 프록시는 캐싱 기능이 있어 자주 사용되는 컨텐츠라면 월등한 성능 향상을 가져올 수 있으며\n정해진 사이트만 연결하게 설정하는 등 웹 사용 환경을 제한할 수 있어 보안이 매우 중요한 기업 환경 등에서 많이 사용합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/67765871/153542110-6c4c2c50-1310-4a2e-bf49-2208d523999c.png\" alt=\"image2021-6-2_8-52-56\"></p>\n<h2 id=\"reverse-proxy\" style=\"position:relative;\"><a href=\"#reverse-proxy\" aria-label=\"reverse proxy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reverse Proxy</h2>\n<p>우선 Reverse Proxy 서버는 <strong>로드 밸런싱</strong>에 사용됩니다. Reverse Proxy 서버를 여러 개의 서버 앞에 두면 특정 서버가 과부화 되지 않게 로드 밸런싱이 가능합니다.  </p>\n<p>또한, 보안에 좋습니다. <strong>본래 서버의 IP 주소를 노출시킬 필요가 없습니다.</strong>  </p>\n<p>성능 향상을 위해 <strong>캐시</strong> 데이터를 저장할 수 있습니다. 만약 한국 유저가 미국에 웹서버를 두고 있는 사이트에 접속할 때, 리버스 프록시 서버가 한국에 있다고 가정 해봅시다. 그럼 한국 유저는 한국에 있는 리버스 프록시 서버와 통신합니다. <strong>리버스 프록시 서버에 캐싱돼 있는 데이터를 사용</strong>할 경우에 더 빠른 성능을 보여줍니다.  </p>\n<p>마지막으로 <strong>SSL 암호화</strong>에 좋습니다. 본래 서버가 클라이언트들과 통신을 할 때 SSL로 암호화, 복호화를 할 경우 비용이 많이 듭니다. 그러나 리버스 프록시를 사용하면 <strong>들어오는 요청 모두 복호화하고 나가는 응답을 암호화 하기 때문에 클라이언트와 안전한 통신</strong>을 할 수 있으며 본래 서버의 부담을 줄여줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/67765871/153542078-3ea84ba2-d988-43b6-abd0-9fc555ca8a11.png\" alt=\"image2021-6-2_8-54-19\"></p>","frontmatter":{"title":"Forward Proxy vs Reverse Proxy","date":"February 09, 2022"}}},"pageContext":{"slug":"/Architecture/forward-proxy-vs-reverse-proxy/","previous":{"fields":{"slug":"/Java/정적-팩토리-메소드에-대하여/"},"frontmatter":{"title":"정적 팩토리 메소드에 대하여"}},"next":{"fields":{"slug":"/Spring/인터페이스를-왜-사용해야-할까/"},"frontmatter":{"title":"인터페이스를 왜 사용해야 할까"}}}},"staticQueryHashes":["2486386679","3128451518"]}