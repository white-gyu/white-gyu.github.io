{"version":3,"sources":["webpack:///./src/components/elements/hr/index.jsx","webpack:///./src/components/post-title/index.jsx","webpack:///./src/components/post-date/index.jsx","webpack:///./src/components/post-container/index.jsx","webpack:///./src/components/social-share/index.jsx","webpack:///./src/components/sponsor-button/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["Hr","className","PostTitle","title","PostDate","date","PostContainer","html","dangerouslySetInnerHTML","__html","SocialShare","author","SponsorButton","sponsorId","target","rel","href","src","alt","data","location","pageContext","useEffect","ScrollManager","post","markdownRemark","metaData","site","siteMetadata","comment","siteUrl","sponsor","frontmatter","postTitle","description","excerpt","buyMeACoffeeId"],"mappings":"sTAIaA,G,UAAK,kBAAM,wBAAIC,UAAU,gB,wBCFzBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,4BAAKA,ICEhCC,G,UAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAO,uBAAGJ,UAAU,aAAaI,KCHtBC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,yBAAKC,wBAAyB,CAAEC,OAAQF,MCI7BG,G,8BAAc,SAAC,GAAsB,EAApBP,MAAoB,EAAbQ,OAcnC,OACE,yBAAKV,UAAU,mBClBNW,G,UAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAC3B,yBAAKZ,UAAU,kBACb,uBACEA,UAAU,aACVa,OAAO,SACPC,IAAI,sBACJC,KAAI,gCAAkCH,GAEtC,yBACEI,IAAI,2DACJC,IAAI,oBAEN,qD,4CCIS,sBAAsC,IAAnCC,EAAkC,EAAlCA,KAAmBC,GAAe,EAA5BC,YAA4B,EAAfD,UACnCE,qBAAU,WAER,OADAC,MACO,kBAAMA,SACZ,IAEH,IAAMC,EAAOL,EAAKM,eACZC,EAAWP,EAAKQ,KAAKC,aACnBzB,EAA6CuB,EAA7CvB,MAAyBQ,GAAoBe,EAAtCG,QAAsCH,EAA7BI,QAA6BJ,EAApBf,QAAQoB,EAAYL,EAAZK,QAEzC,EAAmCP,EAAKQ,YAAzBC,EAAf,EAAQ9B,MAAkBE,EAA1B,EAA0BA,KAE1B,OACE,kBAAC,IAAD,CAAQe,SAAUA,EAAUjB,MAAOA,GACjC,kBAAC,IAAD,CAAMA,MAAO8B,EAAWC,YAAaV,EAAKW,UAC1C,kBAAC,EAAD,CAAWhC,MAAO8B,IAClB,kBAAC,EAAD,CAAU5B,KAAMA,IAChB,kBAAC,EAAD,CAAeE,KAAMiB,EAAKjB,OAC1B,kBAAC,EAAD,CAAaJ,MAAO8B,EAAWtB,OAAQA,MACpCoB,EAAQK,gBACT,kBAAC,EAAD,CAAevB,UAAWkB,EAAQK,iBAEpC,kBAAC,EAAD,MACA,kBAAC,IAAD","file":"component---src-templates-blog-post-js-e38a13f6350645b6b601.js","sourcesContent":["import React from 'react'\n\nimport './index.scss'\n\nexport const Hr = () => <hr className=\"custom-hr\" />\n","import React from 'react'\n\nexport const PostTitle = ({ title }) => <h1>{title}</h1>\n","import React from 'react'\n\nimport './index.scss'\n\nexport const PostDate = ({ date }) => {\n  return <p className=\"post-date\">{date}</p>\n}\n","import React from 'react'\n\nexport const PostContainer = ({ html }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n)\n","import React from 'react'\nimport { FacebookIcon } from './facebook-icon'\nimport { TwitterIcon } from './twitter-icon'\nimport { shareToTwitter, shareToFacebook } from '../../utils/share'\n\nimport './index.scss'\n\nexport const SocialShare = ({ title, author }) => {\n  const text = `Recommend on \"${title}\" written by @${author}`\n\n  const onClickTwitterIcon = e => {\n    e.preventDefault()\n\n    return shareToTwitter(window.location.href, text)\n  }\n\n  const onClickFacebookIcon = e => {\n    e.preventDefault()\n    return shareToFacebook(window.location.href, text)\n  }\n\n  return (\n    <div className=\"social-share\">\n      {/* <FacebookIcon onClick={onClickFacebookIcon} />\n      <TwitterIcon onClick={onClickTwitterIcon} /> */}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport const SponsorButton = ({ sponsorId }) => (\n  <div className=\"sponsor-button\">\n    <a\n      className=\"bmc-button\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={`https://www.buymeacoffee.com/${sponsorId}`}\n    >\n      <img\n        src=\"https://www.buymeacoffee.com/assets/img/BMC-btn-logo.svg\"\n        alt=\"Buy me a coffee\"\n      />\n      <span>Buy me a coffee</span>\n    </a>\n  </div>\n)\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport * as Elements from '../components/elements'\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\nimport { PostTitle } from '../components/post-title'\nimport { PostDate } from '../components/post-date'\nimport { PostContainer } from '../components/post-container'\nimport { SocialShare } from '../components/social-share'\nimport { SponsorButton } from '../components/sponsor-button'\nimport { Bio } from '../components/bio'\n// import { PostNavigator } from '../components/post-navigator'\n// import { Disqus } from '../components/disqus'\n// import { Utterances } from '../components/utterances'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\nimport 'katex/dist/katex.min.css'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title, comment, siteUrl, author, sponsor } = metaData\n  // const { disqusShortName, utterances } = comment\n  const { title: postTitle, date } = post.frontmatter\n\n  return (\n    <Layout location={location} title={title}>\n      <Head title={postTitle} description={post.excerpt} />\n      <PostTitle title={postTitle} />\n      <PostDate date={date} />\n      <PostContainer html={post.html} />\n      <SocialShare title={postTitle} author={author} />\n      {!!sponsor.buyMeACoffeeId && (\n        <SponsorButton sponsorId={sponsor.buyMeACoffeeId} />\n      )}\n      <Elements.Hr />\n      <Bio />\n      {/* <PostNavigator pageContext={pageContext} />\n      {!!disqusShortName && (\n        <Disqus\n          post={post}\n          shortName={disqusShortName}\n          siteUrl={siteUrl}\n          slug={pageContext.slug}\n        />\n      )}\n      {!!utterances && <Utterances repo={utterances} />} */}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n        sponsor {\n          buyMeACoffeeId\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}